<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="17.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <PreferredToolArchitecture>x64</PreferredToolArchitecture>
  </PropertyGroup>
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="MinSizeRel|x64">
      <Configuration>MinSizeRel</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="RelWithDebInfo|x64">
      <Configuration>RelWithDebInfo</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{C8F064C3-2E9A-36AA-9460-9C795BE10210}</ProjectGuid>
    <Keyword>Win32Proj</Keyword>
    <WindowsTargetPlatformVersion>10.0.22621.0</WindowsTargetPlatformVersion>
    <Platform>x64</Platform>
    <ProjectName>rdkafka</ProjectName>
    <VCProjectUpgraderObjectName>NoUpgrade</VCProjectUpgraderObjectName>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <CharacterSet>MultiByte</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup>
    <_ProjectFileVersion>10.0.20506.1</_ProjectFileVersion>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\TestRepo\librdkafka-master\build\Debug\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">rdkafka.dir\Debug\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">rdkafka</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">.dll</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">true</GenerateManifest>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\TestRepo\librdkafka-master\build\Release\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='Release|x64'">rdkafka.dir\Release\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='Release|x64'">rdkafka</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='Release|x64'">.dll</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='Release|x64'">true</GenerateManifest>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\TestRepo\librdkafka-master\build\MinSizeRel\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">rdkafka.dir\MinSizeRel\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">rdkafka</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">.dll</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">true</GenerateManifest>
    <OutDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\TestRepo\librdkafka-master\build\RelWithDebInfo\</OutDir>
    <IntDir Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">rdkafka.dir\RelWithDebInfo\</IntDir>
    <TargetName Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">rdkafka</TargetName>
    <TargetExt Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">.dll</TargetExt>
    <LinkIncremental Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">true</LinkIncremental>
    <GenerateManifest Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">true</GenerateManifest>
  </PropertyGroup>
  <PropertyGroup />
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>D:\TestRepo\librdkafka-master\src;\dummy;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AdditionalOptions>%(AdditionalOptions) /external:I "D:/OpenSSL-Win64/include"</AdditionalOptions>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <BasicRuntimeChecks>EnableFastChecks</BasicRuntimeChecks>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <ExceptionHandling>
      </ExceptionHandling>
      <ExternalWarningLevel>TurnOffAllWarnings</ExternalWarningLevel>
      <InlineFunctionExpansion>Disabled</InlineFunctionExpansion>
      <MinimalRebuild>
      </MinimalRebuild>
      <Optimization>Disabled</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
      <SupportJustMyCode>
      </SupportJustMyCode>
      <UseFullPaths>false</UseFullPaths>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;LIBRDKAFKA_EXPORTS;CMAKE_INTDIR="Debug";rdkafka_EXPORTS</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <ScanSourceForModuleDependencies>false</ScanSourceForModuleDependencies>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_DEBUG;_WINDOWS;LIBRDKAFKA_EXPORTS;CMAKE_INTDIR=\"Debug\";rdkafka_EXPORTS</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>D:\TestRepo\librdkafka-master\src;\dummy;D:\OpenSSL-Win64\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>D:\TestRepo\librdkafka-master\src;\dummy;D:\OpenSSL-Win64\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Link>
      <AdditionalDependencies>D:\OpenSSL-Win64\lib\VC\x64\MDd\libssl.lib;D:\OpenSSL-Win64\lib\VC\x64\MDd\libcrypto.lib;crypt32.lib;ws2_32.lib;secur32.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>D:/OpenSSL-Win64/lib/VC/x64/MDd;D:/OpenSSL-Win64/lib/VC/x64/MDd/$(Configuration);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>D:/TestRepo/librdkafka-master/build/Debug/rdkafka.lib</ImportLibrary>
      <ProgramDataBaseFile>D:/TestRepo/librdkafka-master/build/Debug/rdkafka.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>D:\TestRepo\librdkafka-master\src;\dummy;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AdditionalOptions>%(AdditionalOptions) /external:I "D:/OpenSSL-Win64/include"</AdditionalOptions>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <BasicRuntimeChecks>Default</BasicRuntimeChecks>
      <ExceptionHandling>
      </ExceptionHandling>
      <ExternalWarningLevel>TurnOffAllWarnings</ExternalWarningLevel>
      <InlineFunctionExpansion>AnySuitable</InlineFunctionExpansion>
      <MinimalRebuild>
      </MinimalRebuild>
      <Optimization>MaxSpeed</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <SupportJustMyCode>
      </SupportJustMyCode>
      <UseFullPaths>false</UseFullPaths>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;LIBRDKAFKA_EXPORTS;CMAKE_INTDIR="Release";rdkafka_EXPORTS</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <DebugInformationFormat>
      </DebugInformationFormat>
      <ScanSourceForModuleDependencies>false</ScanSourceForModuleDependencies>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;LIBRDKAFKA_EXPORTS;CMAKE_INTDIR=\"Release\";rdkafka_EXPORTS</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>D:\TestRepo\librdkafka-master\src;\dummy;D:\OpenSSL-Win64\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>D:\TestRepo\librdkafka-master\src;\dummy;D:\OpenSSL-Win64\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Link>
      <AdditionalDependencies>m.lib;D:\OpenSSL-Win64\lib\VC\x64\MD\libssl.lib;D:\OpenSSL-Win64\lib\VC\x64\MD\libcrypto.lib;crypt32.lib;ws2_32.lib;secur32.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>D:/OpenSSL-Win64/lib/VC/x64/MD;D:/OpenSSL-Win64/lib/VC/x64/MD/$(Configuration);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>D:/TestRepo/librdkafka-master/build/Release/rdkafka.lib</ImportLibrary>
      <ProgramDataBaseFile>D:/TestRepo/librdkafka-master/build/Release/rdkafka.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>D:\TestRepo\librdkafka-master\src;\dummy;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AdditionalOptions>%(AdditionalOptions) /external:I "D:/OpenSSL-Win64/include"</AdditionalOptions>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <BasicRuntimeChecks>Default</BasicRuntimeChecks>
      <ExceptionHandling>
      </ExceptionHandling>
      <ExternalWarningLevel>TurnOffAllWarnings</ExternalWarningLevel>
      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
      <MinimalRebuild>
      </MinimalRebuild>
      <Optimization>MinSpace</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <SupportJustMyCode>
      </SupportJustMyCode>
      <UseFullPaths>false</UseFullPaths>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;LIBRDKAFKA_EXPORTS;CMAKE_INTDIR="MinSizeRel";rdkafka_EXPORTS</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <DebugInformationFormat>
      </DebugInformationFormat>
      <ScanSourceForModuleDependencies>false</ScanSourceForModuleDependencies>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;LIBRDKAFKA_EXPORTS;CMAKE_INTDIR=\"MinSizeRel\";rdkafka_EXPORTS</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>D:\TestRepo\librdkafka-master\src;\dummy;D:\OpenSSL-Win64\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>D:\TestRepo\librdkafka-master\src;\dummy;D:\OpenSSL-Win64\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Link>
      <AdditionalDependencies>m.lib;D:\OpenSSL-Win64\lib\VC\x64\MD\libssl.lib;D:\OpenSSL-Win64\lib\VC\x64\MD\libcrypto.lib;crypt32.lib;ws2_32.lib;secur32.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>D:/OpenSSL-Win64/lib/VC/x64/MD;D:/OpenSSL-Win64/lib/VC/x64/MD/$(Configuration);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>false</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>D:/TestRepo/librdkafka-master/build/MinSizeRel/rdkafka.lib</ImportLibrary>
      <ProgramDataBaseFile>D:/TestRepo/librdkafka-master/build/MinSizeRel/rdkafka.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">
    <ClCompile>
      <AdditionalIncludeDirectories>D:\TestRepo\librdkafka-master\src;\dummy;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <AdditionalOptions>%(AdditionalOptions) /external:I "D:/OpenSSL-Win64/include"</AdditionalOptions>
      <AssemblerListingLocation>$(IntDir)</AssemblerListingLocation>
      <BasicRuntimeChecks>Default</BasicRuntimeChecks>
      <DebugInformationFormat>ProgramDatabase</DebugInformationFormat>
      <ExceptionHandling>
      </ExceptionHandling>
      <ExternalWarningLevel>TurnOffAllWarnings</ExternalWarningLevel>
      <InlineFunctionExpansion>OnlyExplicitInline</InlineFunctionExpansion>
      <MinimalRebuild>
      </MinimalRebuild>
      <Optimization>MaxSpeed</Optimization>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <RuntimeLibrary>MultiThreadedDLL</RuntimeLibrary>
      <SupportJustMyCode>
      </SupportJustMyCode>
      <UseFullPaths>false</UseFullPaths>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;LIBRDKAFKA_EXPORTS;CMAKE_INTDIR="RelWithDebInfo";rdkafka_EXPORTS</PreprocessorDefinitions>
      <ObjectFileName>$(IntDir)</ObjectFileName>
      <ScanSourceForModuleDependencies>false</ScanSourceForModuleDependencies>
    </ClCompile>
    <ResourceCompile>
      <PreprocessorDefinitions>%(PreprocessorDefinitions);WIN32;_WINDOWS;NDEBUG;LIBRDKAFKA_EXPORTS;CMAKE_INTDIR=\"RelWithDebInfo\";rdkafka_EXPORTS</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>D:\TestRepo\librdkafka-master\src;\dummy;D:\OpenSSL-Win64\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ResourceCompile>
    <Midl>
      <AdditionalIncludeDirectories>D:\TestRepo\librdkafka-master\src;\dummy;D:\OpenSSL-Win64\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <OutputDirectory>$(ProjectDir)/$(IntDir)</OutputDirectory>
      <HeaderFileName>%(Filename).h</HeaderFileName>
      <TypeLibraryName>%(Filename).tlb</TypeLibraryName>
      <InterfaceIdentifierFileName>%(Filename)_i.c</InterfaceIdentifierFileName>
      <ProxyFileName>%(Filename)_p.c</ProxyFileName>
    </Midl>
    <Link>
      <AdditionalDependencies>m.lib;D:\OpenSSL-Win64\lib\VC\x64\MD\libssl.lib;D:\OpenSSL-Win64\lib\VC\x64\MD\libcrypto.lib;crypt32.lib;ws2_32.lib;secur32.lib;kernel32.lib;user32.lib;gdi32.lib;winspool.lib;shell32.lib;ole32.lib;oleaut32.lib;uuid.lib;comdlg32.lib;advapi32.lib</AdditionalDependencies>
      <AdditionalLibraryDirectories>D:/OpenSSL-Win64/lib/VC/x64/MD;D:/OpenSSL-Win64/lib/VC/x64/MD/$(Configuration);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>%(AdditionalOptions) /machine:x64</AdditionalOptions>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
      <ImportLibrary>D:/TestRepo/librdkafka-master/build/RelWithDebInfo/rdkafka.lib</ImportLibrary>
      <ProgramDataBaseFile>D:/TestRepo/librdkafka-master/build/RelWithDebInfo/rdkafka.pdb</ProgramDataBaseFile>
      <SubSystem>Console</SubSystem>
    </Link>
    <ProjectReference>
      <LinkLibraryDependencies>false</LinkLibraryDependencies>
    </ProjectReference>
  </ItemDefinitionGroup>
  <ItemGroup>
    <CustomBuild Include="D:\TestRepo\librdkafka-master\src\CMakeLists.txt">
      <UseUtf8Encoding>Always</UseUtf8Encoding>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Building Custom Rule D:/TestRepo/librdkafka-master/src/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">setlocal
D:\CMake\bin\cmake.exe -SD:/TestRepo/librdkafka-master/src -BD:/TestRepo/librdkafka-master/build --check-stamp-file D:/TestRepo/librdkafka-master/build/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\CMake\share\cmake-3.30\Modules\CMakeCCompiler.cmake.in;D:\CMake\share\cmake-3.30\Modules\CMakeCCompilerABI.c;D:\CMake\share\cmake-3.30\Modules\CMakeCInformation.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeCXXCompiler.cmake.in;D:\CMake\share\cmake-3.30\Modules\CMakeCXXCompilerABI.cpp;D:\CMake\share\cmake-3.30\Modules\CMakeCXXInformation.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeCommonLanguageInclude.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeCompilerIdDetection.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeDetermineCCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeDetermineCXXCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeDetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeDetermineCompilerABI.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeDetermineCompilerId.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeDetermineCompilerSupport.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeDetermineRCCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeDetermineSystem.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeFindBinUtils.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeGenericSystem.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeInitializeConfigs.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeLanguageInformation.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeParseImplicitIncludeInfo.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeParseImplicitLinkInfo.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeParseLibraryArchitecture.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeRCCompiler.cmake.in;D:\CMake\share\cmake-3.30\Modules\CMakeRCInformation.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeSystem.cmake.in;D:\CMake\share\cmake-3.30\Modules\CMakeSystemSpecificInformation.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeSystemSpecificInitialize.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeTestCCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeTestCXXCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeTestCompilerCommon.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeTestRCCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\CheckCSourceCompiles.cmake;D:\CMake\share\cmake-3.30\Modules\CheckIncludeFile.cmake;D:\CMake\share\cmake-3.30\Modules\CheckLibraryExists.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\ADSP-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\ARMCC-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\ARMClang-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\AppleClang-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\Borland-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\Bruce-C-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\CMakeCommonCompilerMacros.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\Clang-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\Clang-DetermineCompilerInternal.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\Compaq-C-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\Compaq-CXX-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\Cray-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\CrayClang-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\Embarcadero-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\Fujitsu-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\FujitsuClang-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\GHS-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\GNU-C-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\GNU-CXX-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\HP-C-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\HP-CXX-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\IAR-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\IBMCPP-C-DetermineVersionInternal.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\IBMCPP-CXX-DetermineVersionInternal.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\IBMClang-C-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\IBMClang-CXX-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\Intel-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\IntelLLVM-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\LCC-C-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\LCC-CXX-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\MSVC-C.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\MSVC-CXX.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\MSVC-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\MSVC.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\NVHPC-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\NVIDIA-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\OpenWatcom-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\OrangeC-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\PGI-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\PathScale-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\SCO-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\SDCC-C-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\SunPro-C-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\SunPro-CXX-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\TI-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\TIClang-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\Tasking-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\TinyCC-C-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\VisualAge-C-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\VisualAge-CXX-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\Watcom-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\XL-C-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\XL-CXX-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\XLClang-C-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\XLClang-CXX-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\zOS-C-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\zOS-CXX-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\CompilerId\VS-10.vcxproj.in;D:\CMake\share\cmake-3.30\Modules\FindOpenSSL.cmake;D:\CMake\share\cmake-3.30\Modules\FindPackageHandleStandardArgs.cmake;D:\CMake\share\cmake-3.30\Modules\FindPackageMessage.cmake;D:\CMake\share\cmake-3.30\Modules\FindThreads.cmake;D:\CMake\share\cmake-3.30\Modules\Internal\CMakeDetermineLinkerId.cmake;D:\CMake\share\cmake-3.30\Modules\Internal\CheckSourceCompiles.cmake;D:\CMake\share\cmake-3.30\Modules\Internal\FeatureTesting.cmake;D:\CMake\share\cmake-3.30\Modules\Platform\Windows-Determine-CXX.cmake;D:\CMake\share\cmake-3.30\Modules\Platform\Windows-Initialize.cmake;D:\CMake\share\cmake-3.30\Modules\Platform\Windows-MSVC-C.cmake;D:\CMake\share\cmake-3.30\Modules\Platform\Windows-MSVC-CXX.cmake;D:\CMake\share\cmake-3.30\Modules\Platform\Windows-MSVC.cmake;D:\CMake\share\cmake-3.30\Modules\Platform\Windows.cmake;D:\CMake\share\cmake-3.30\Modules\Platform\WindowsPaths.cmake;D:\CMake\share\cmake-3.30\Modules\SelectLibraryConfigurations.cmake;D:\TestRepo\librdkafka-master\build\CMakeFiles\3.30.3\CMakeCCompiler.cmake;D:\TestRepo\librdkafka-master\build\CMakeFiles\3.30.3\CMakeCXXCompiler.cmake;D:\TestRepo\librdkafka-master\build\CMakeFiles\3.30.3\CMakeRCCompiler.cmake;D:\TestRepo\librdkafka-master\build\CMakeFiles\3.30.3\CMakeSystem.cmake;D:\TestRepo\librdkafka-master\packaging\cmake\rdkafka.pc.in;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">D:\TestRepo\librdkafka-master\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Building Custom Rule D:/TestRepo/librdkafka-master/src/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">setlocal
D:\CMake\bin\cmake.exe -SD:/TestRepo/librdkafka-master/src -BD:/TestRepo/librdkafka-master/build --check-stamp-file D:/TestRepo/librdkafka-master/build/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\CMake\share\cmake-3.30\Modules\CMakeCCompiler.cmake.in;D:\CMake\share\cmake-3.30\Modules\CMakeCCompilerABI.c;D:\CMake\share\cmake-3.30\Modules\CMakeCInformation.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeCXXCompiler.cmake.in;D:\CMake\share\cmake-3.30\Modules\CMakeCXXCompilerABI.cpp;D:\CMake\share\cmake-3.30\Modules\CMakeCXXInformation.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeCommonLanguageInclude.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeCompilerIdDetection.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeDetermineCCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeDetermineCXXCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeDetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeDetermineCompilerABI.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeDetermineCompilerId.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeDetermineCompilerSupport.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeDetermineRCCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeDetermineSystem.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeFindBinUtils.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeGenericSystem.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeInitializeConfigs.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeLanguageInformation.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeParseImplicitIncludeInfo.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeParseImplicitLinkInfo.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeParseLibraryArchitecture.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeRCCompiler.cmake.in;D:\CMake\share\cmake-3.30\Modules\CMakeRCInformation.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeSystem.cmake.in;D:\CMake\share\cmake-3.30\Modules\CMakeSystemSpecificInformation.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeSystemSpecificInitialize.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeTestCCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeTestCXXCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeTestCompilerCommon.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeTestRCCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\CheckCSourceCompiles.cmake;D:\CMake\share\cmake-3.30\Modules\CheckIncludeFile.cmake;D:\CMake\share\cmake-3.30\Modules\CheckLibraryExists.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\ADSP-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\ARMCC-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\ARMClang-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\AppleClang-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\Borland-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\Bruce-C-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\CMakeCommonCompilerMacros.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\Clang-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\Clang-DetermineCompilerInternal.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\Compaq-C-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\Compaq-CXX-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\Cray-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\CrayClang-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\Embarcadero-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\Fujitsu-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\FujitsuClang-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\GHS-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\GNU-C-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\GNU-CXX-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\HP-C-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\HP-CXX-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\IAR-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\IBMCPP-C-DetermineVersionInternal.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\IBMCPP-CXX-DetermineVersionInternal.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\IBMClang-C-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\IBMClang-CXX-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\Intel-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\IntelLLVM-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\LCC-C-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\LCC-CXX-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\MSVC-C.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\MSVC-CXX.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\MSVC-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\MSVC.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\NVHPC-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\NVIDIA-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\OpenWatcom-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\OrangeC-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\PGI-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\PathScale-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\SCO-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\SDCC-C-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\SunPro-C-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\SunPro-CXX-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\TI-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\TIClang-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\Tasking-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\TinyCC-C-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\VisualAge-C-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\VisualAge-CXX-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\Watcom-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\XL-C-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\XL-CXX-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\XLClang-C-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\XLClang-CXX-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\zOS-C-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\zOS-CXX-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\CompilerId\VS-10.vcxproj.in;D:\CMake\share\cmake-3.30\Modules\FindOpenSSL.cmake;D:\CMake\share\cmake-3.30\Modules\FindPackageHandleStandardArgs.cmake;D:\CMake\share\cmake-3.30\Modules\FindPackageMessage.cmake;D:\CMake\share\cmake-3.30\Modules\FindThreads.cmake;D:\CMake\share\cmake-3.30\Modules\Internal\CMakeDetermineLinkerId.cmake;D:\CMake\share\cmake-3.30\Modules\Internal\CheckSourceCompiles.cmake;D:\CMake\share\cmake-3.30\Modules\Internal\FeatureTesting.cmake;D:\CMake\share\cmake-3.30\Modules\Platform\Windows-Determine-CXX.cmake;D:\CMake\share\cmake-3.30\Modules\Platform\Windows-Initialize.cmake;D:\CMake\share\cmake-3.30\Modules\Platform\Windows-MSVC-C.cmake;D:\CMake\share\cmake-3.30\Modules\Platform\Windows-MSVC-CXX.cmake;D:\CMake\share\cmake-3.30\Modules\Platform\Windows-MSVC.cmake;D:\CMake\share\cmake-3.30\Modules\Platform\Windows.cmake;D:\CMake\share\cmake-3.30\Modules\Platform\WindowsPaths.cmake;D:\CMake\share\cmake-3.30\Modules\SelectLibraryConfigurations.cmake;D:\TestRepo\librdkafka-master\build\CMakeFiles\3.30.3\CMakeCCompiler.cmake;D:\TestRepo\librdkafka-master\build\CMakeFiles\3.30.3\CMakeCXXCompiler.cmake;D:\TestRepo\librdkafka-master\build\CMakeFiles\3.30.3\CMakeRCCompiler.cmake;D:\TestRepo\librdkafka-master\build\CMakeFiles\3.30.3\CMakeSystem.cmake;D:\TestRepo\librdkafka-master\packaging\cmake\rdkafka.pc.in;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">D:\TestRepo\librdkafka-master\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='Release|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">Building Custom Rule D:/TestRepo/librdkafka-master/src/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">setlocal
D:\CMake\bin\cmake.exe -SD:/TestRepo/librdkafka-master/src -BD:/TestRepo/librdkafka-master/build --check-stamp-file D:/TestRepo/librdkafka-master/build/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\CMake\share\cmake-3.30\Modules\CMakeCCompiler.cmake.in;D:\CMake\share\cmake-3.30\Modules\CMakeCCompilerABI.c;D:\CMake\share\cmake-3.30\Modules\CMakeCInformation.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeCXXCompiler.cmake.in;D:\CMake\share\cmake-3.30\Modules\CMakeCXXCompilerABI.cpp;D:\CMake\share\cmake-3.30\Modules\CMakeCXXInformation.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeCommonLanguageInclude.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeCompilerIdDetection.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeDetermineCCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeDetermineCXXCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeDetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeDetermineCompilerABI.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeDetermineCompilerId.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeDetermineCompilerSupport.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeDetermineRCCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeDetermineSystem.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeFindBinUtils.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeGenericSystem.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeInitializeConfigs.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeLanguageInformation.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeParseImplicitIncludeInfo.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeParseImplicitLinkInfo.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeParseLibraryArchitecture.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeRCCompiler.cmake.in;D:\CMake\share\cmake-3.30\Modules\CMakeRCInformation.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeSystem.cmake.in;D:\CMake\share\cmake-3.30\Modules\CMakeSystemSpecificInformation.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeSystemSpecificInitialize.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeTestCCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeTestCXXCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeTestCompilerCommon.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeTestRCCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\CheckCSourceCompiles.cmake;D:\CMake\share\cmake-3.30\Modules\CheckIncludeFile.cmake;D:\CMake\share\cmake-3.30\Modules\CheckLibraryExists.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\ADSP-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\ARMCC-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\ARMClang-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\AppleClang-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\Borland-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\Bruce-C-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\CMakeCommonCompilerMacros.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\Clang-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\Clang-DetermineCompilerInternal.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\Compaq-C-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\Compaq-CXX-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\Cray-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\CrayClang-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\Embarcadero-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\Fujitsu-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\FujitsuClang-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\GHS-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\GNU-C-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\GNU-CXX-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\HP-C-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\HP-CXX-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\IAR-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\IBMCPP-C-DetermineVersionInternal.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\IBMCPP-CXX-DetermineVersionInternal.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\IBMClang-C-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\IBMClang-CXX-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\Intel-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\IntelLLVM-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\LCC-C-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\LCC-CXX-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\MSVC-C.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\MSVC-CXX.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\MSVC-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\MSVC.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\NVHPC-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\NVIDIA-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\OpenWatcom-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\OrangeC-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\PGI-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\PathScale-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\SCO-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\SDCC-C-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\SunPro-C-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\SunPro-CXX-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\TI-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\TIClang-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\Tasking-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\TinyCC-C-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\VisualAge-C-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\VisualAge-CXX-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\Watcom-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\XL-C-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\XL-CXX-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\XLClang-C-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\XLClang-CXX-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\zOS-C-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\zOS-CXX-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\CompilerId\VS-10.vcxproj.in;D:\CMake\share\cmake-3.30\Modules\FindOpenSSL.cmake;D:\CMake\share\cmake-3.30\Modules\FindPackageHandleStandardArgs.cmake;D:\CMake\share\cmake-3.30\Modules\FindPackageMessage.cmake;D:\CMake\share\cmake-3.30\Modules\FindThreads.cmake;D:\CMake\share\cmake-3.30\Modules\Internal\CMakeDetermineLinkerId.cmake;D:\CMake\share\cmake-3.30\Modules\Internal\CheckSourceCompiles.cmake;D:\CMake\share\cmake-3.30\Modules\Internal\FeatureTesting.cmake;D:\CMake\share\cmake-3.30\Modules\Platform\Windows-Determine-CXX.cmake;D:\CMake\share\cmake-3.30\Modules\Platform\Windows-Initialize.cmake;D:\CMake\share\cmake-3.30\Modules\Platform\Windows-MSVC-C.cmake;D:\CMake\share\cmake-3.30\Modules\Platform\Windows-MSVC-CXX.cmake;D:\CMake\share\cmake-3.30\Modules\Platform\Windows-MSVC.cmake;D:\CMake\share\cmake-3.30\Modules\Platform\Windows.cmake;D:\CMake\share\cmake-3.30\Modules\Platform\WindowsPaths.cmake;D:\CMake\share\cmake-3.30\Modules\SelectLibraryConfigurations.cmake;D:\TestRepo\librdkafka-master\build\CMakeFiles\3.30.3\CMakeCCompiler.cmake;D:\TestRepo\librdkafka-master\build\CMakeFiles\3.30.3\CMakeCXXCompiler.cmake;D:\TestRepo\librdkafka-master\build\CMakeFiles\3.30.3\CMakeRCCompiler.cmake;D:\TestRepo\librdkafka-master\build\CMakeFiles\3.30.3\CMakeSystem.cmake;D:\TestRepo\librdkafka-master\packaging\cmake\rdkafka.pc.in;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">D:\TestRepo\librdkafka-master\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='MinSizeRel|x64'">false</LinkObjects>
      <Message Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">Building Custom Rule D:/TestRepo/librdkafka-master/src/CMakeLists.txt</Message>
      <Command Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">setlocal
D:\CMake\bin\cmake.exe -SD:/TestRepo/librdkafka-master/src -BD:/TestRepo/librdkafka-master/build --check-stamp-file D:/TestRepo/librdkafka-master/build/CMakeFiles/generate.stamp
if %errorlevel% neq 0 goto :cmEnd
:cmEnd
endlocal &amp; call :cmErrorLevel %errorlevel% &amp; goto :cmDone
:cmErrorLevel
exit /b %1
:cmDone
if %errorlevel% neq 0 goto :VCEnd</Command>
      <AdditionalInputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\CMake\share\cmake-3.30\Modules\CMakeCCompiler.cmake.in;D:\CMake\share\cmake-3.30\Modules\CMakeCCompilerABI.c;D:\CMake\share\cmake-3.30\Modules\CMakeCInformation.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeCXXCompiler.cmake.in;D:\CMake\share\cmake-3.30\Modules\CMakeCXXCompilerABI.cpp;D:\CMake\share\cmake-3.30\Modules\CMakeCXXInformation.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeCommonLanguageInclude.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeCompilerIdDetection.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeDetermineCCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeDetermineCXXCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeDetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeDetermineCompilerABI.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeDetermineCompilerId.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeDetermineCompilerSupport.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeDetermineRCCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeDetermineSystem.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeFindBinUtils.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeGenericSystem.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeInitializeConfigs.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeLanguageInformation.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeParseImplicitIncludeInfo.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeParseImplicitLinkInfo.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeParseLibraryArchitecture.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeRCCompiler.cmake.in;D:\CMake\share\cmake-3.30\Modules\CMakeRCInformation.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeSystem.cmake.in;D:\CMake\share\cmake-3.30\Modules\CMakeSystemSpecificInformation.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeSystemSpecificInitialize.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeTestCCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeTestCXXCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeTestCompilerCommon.cmake;D:\CMake\share\cmake-3.30\Modules\CMakeTestRCCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\CheckCSourceCompiles.cmake;D:\CMake\share\cmake-3.30\Modules\CheckIncludeFile.cmake;D:\CMake\share\cmake-3.30\Modules\CheckLibraryExists.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\ADSP-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\ARMCC-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\ARMClang-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\AppleClang-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\Borland-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\Bruce-C-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\CMakeCommonCompilerMacros.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\Clang-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\Clang-DetermineCompilerInternal.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\Compaq-C-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\Compaq-CXX-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\Cray-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\CrayClang-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\Embarcadero-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\Fujitsu-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\FujitsuClang-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\GHS-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\GNU-C-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\GNU-CXX-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\HP-C-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\HP-CXX-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\IAR-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\IBMCPP-C-DetermineVersionInternal.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\IBMCPP-CXX-DetermineVersionInternal.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\IBMClang-C-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\IBMClang-CXX-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\Intel-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\IntelLLVM-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\LCC-C-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\LCC-CXX-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\MSVC-C.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\MSVC-CXX.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\MSVC-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\MSVC.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\NVHPC-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\NVIDIA-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\OpenWatcom-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\OrangeC-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\PGI-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\PathScale-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\SCO-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\SDCC-C-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\SunPro-C-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\SunPro-CXX-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\TI-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\TIClang-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\Tasking-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\TinyCC-C-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\VisualAge-C-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\VisualAge-CXX-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\Watcom-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\XL-C-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\XL-CXX-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\XLClang-C-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\XLClang-CXX-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\zOS-C-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\Compiler\zOS-CXX-DetermineCompiler.cmake;D:\CMake\share\cmake-3.30\Modules\CompilerId\VS-10.vcxproj.in;D:\CMake\share\cmake-3.30\Modules\FindOpenSSL.cmake;D:\CMake\share\cmake-3.30\Modules\FindPackageHandleStandardArgs.cmake;D:\CMake\share\cmake-3.30\Modules\FindPackageMessage.cmake;D:\CMake\share\cmake-3.30\Modules\FindThreads.cmake;D:\CMake\share\cmake-3.30\Modules\Internal\CMakeDetermineLinkerId.cmake;D:\CMake\share\cmake-3.30\Modules\Internal\CheckSourceCompiles.cmake;D:\CMake\share\cmake-3.30\Modules\Internal\FeatureTesting.cmake;D:\CMake\share\cmake-3.30\Modules\Platform\Windows-Determine-CXX.cmake;D:\CMake\share\cmake-3.30\Modules\Platform\Windows-Initialize.cmake;D:\CMake\share\cmake-3.30\Modules\Platform\Windows-MSVC-C.cmake;D:\CMake\share\cmake-3.30\Modules\Platform\Windows-MSVC-CXX.cmake;D:\CMake\share\cmake-3.30\Modules\Platform\Windows-MSVC.cmake;D:\CMake\share\cmake-3.30\Modules\Platform\Windows.cmake;D:\CMake\share\cmake-3.30\Modules\Platform\WindowsPaths.cmake;D:\CMake\share\cmake-3.30\Modules\SelectLibraryConfigurations.cmake;D:\TestRepo\librdkafka-master\build\CMakeFiles\3.30.3\CMakeCCompiler.cmake;D:\TestRepo\librdkafka-master\build\CMakeFiles\3.30.3\CMakeCXXCompiler.cmake;D:\TestRepo\librdkafka-master\build\CMakeFiles\3.30.3\CMakeRCCompiler.cmake;D:\TestRepo\librdkafka-master\build\CMakeFiles\3.30.3\CMakeSystem.cmake;D:\TestRepo\librdkafka-master\packaging\cmake\rdkafka.pc.in;%(AdditionalInputs)</AdditionalInputs>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">D:\TestRepo\librdkafka-master\build\CMakeFiles\generate.stamp</Outputs>
      <LinkObjects Condition="'$(Configuration)|$(Platform)'=='RelWithDebInfo|x64'">false</LinkObjects>
    </CustomBuild>
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="D:\TestRepo\librdkafka-master\src\crc32c.c" />
    <ClCompile Include="D:\TestRepo\librdkafka-master\src\rdaddr.c" />
    <ClCompile Include="D:\TestRepo\librdkafka-master\src\rdavl.c" />
    <ClCompile Include="D:\TestRepo\librdkafka-master\src\rdbuf.c" />
    <ClCompile Include="D:\TestRepo\librdkafka-master\src\rdcrc32.c" />
    <ClCompile Include="D:\TestRepo\librdkafka-master\src\rdfnv1a.c" />
    <ClCompile Include="D:\TestRepo\librdkafka-master\src\rdbase64.c" />
    <ClCompile Include="D:\TestRepo\librdkafka-master\src\rdkafka.c" />
    <ClCompile Include="D:\TestRepo\librdkafka-master\src\rdkafka_assignor.c" />
    <ClCompile Include="D:\TestRepo\librdkafka-master\src\rdkafka_broker.c" />
    <ClCompile Include="D:\TestRepo\librdkafka-master\src\rdkafka_buf.c" />
    <ClCompile Include="D:\TestRepo\librdkafka-master\src\rdkafka_cgrp.c" />
    <ClCompile Include="D:\TestRepo\librdkafka-master\src\rdkafka_conf.c" />
    <ClCompile Include="D:\TestRepo\librdkafka-master\src\rdkafka_event.c" />
    <ClCompile Include="D:\TestRepo\librdkafka-master\src\rdkafka_feature.c" />
    <ClCompile Include="D:\TestRepo\librdkafka-master\src\rdkafka_lz4.c" />
    <ClCompile Include="D:\TestRepo\librdkafka-master\src\rdkafka_metadata.c" />
    <ClCompile Include="D:\TestRepo\librdkafka-master\src\rdkafka_metadata_cache.c" />
    <ClCompile Include="D:\TestRepo\librdkafka-master\src\rdkafka_msg.c" />
    <ClCompile Include="D:\TestRepo\librdkafka-master\src\rdkafka_msgset_reader.c" />
    <ClCompile Include="D:\TestRepo\librdkafka-master\src\rdkafka_msgset_writer.c" />
    <ClCompile Include="D:\TestRepo\librdkafka-master\src\rdkafka_offset.c" />
    <ClCompile Include="D:\TestRepo\librdkafka-master\src\rdkafka_op.c" />
    <ClCompile Include="D:\TestRepo\librdkafka-master\src\rdkafka_partition.c" />
    <ClCompile Include="D:\TestRepo\librdkafka-master\src\rdkafka_pattern.c" />
    <ClCompile Include="D:\TestRepo\librdkafka-master\src\rdkafka_queue.c" />
    <ClCompile Include="D:\TestRepo\librdkafka-master\src\rdkafka_range_assignor.c" />
    <ClCompile Include="D:\TestRepo\librdkafka-master\src\rdkafka_request.c" />
    <ClCompile Include="D:\TestRepo\librdkafka-master\src\rdkafka_roundrobin_assignor.c" />
    <ClCompile Include="D:\TestRepo\librdkafka-master\src\rdkafka_sasl.c" />
    <ClCompile Include="D:\TestRepo\librdkafka-master\src\rdkafka_sasl_plain.c" />
    <ClCompile Include="D:\TestRepo\librdkafka-master\src\rdkafka_sticky_assignor.c" />
    <ClCompile Include="D:\TestRepo\librdkafka-master\src\rdkafka_subscription.c" />
    <ClCompile Include="D:\TestRepo\librdkafka-master\src\rdkafka_assignment.c" />
    <ClCompile Include="D:\TestRepo\librdkafka-master\src\rdkafka_timer.c" />
    <ClCompile Include="D:\TestRepo\librdkafka-master\src\rdkafka_topic.c" />
    <ClCompile Include="D:\TestRepo\librdkafka-master\src\rdkafka_transport.c" />
    <ClCompile Include="D:\TestRepo\librdkafka-master\src\rdkafka_interceptor.c" />
    <ClCompile Include="D:\TestRepo\librdkafka-master\src\rdkafka_header.c" />
    <ClCompile Include="D:\TestRepo\librdkafka-master\src\rdkafka_admin.c" />
    <ClCompile Include="D:\TestRepo\librdkafka-master\src\rdkafka_aux.c" />
    <ClCompile Include="D:\TestRepo\librdkafka-master\src\rdkafka_background.c" />
    <ClCompile Include="D:\TestRepo\librdkafka-master\src\rdkafka_idempotence.c" />
    <ClCompile Include="D:\TestRepo\librdkafka-master\src\rdkafka_txnmgr.c" />
    <ClCompile Include="D:\TestRepo\librdkafka-master\src\rdkafka_cert.c" />
    <ClCompile Include="D:\TestRepo\librdkafka-master\src\rdkafka_coord.c" />
    <ClCompile Include="D:\TestRepo\librdkafka-master\src\rdkafka_mock.c" />
    <ClCompile Include="D:\TestRepo\librdkafka-master\src\rdkafka_mock_handlers.c" />
    <ClCompile Include="D:\TestRepo\librdkafka-master\src\rdkafka_mock_cgrp.c" />
    <ClCompile Include="D:\TestRepo\librdkafka-master\src\rdkafka_error.c" />
    <ClCompile Include="D:\TestRepo\librdkafka-master\src\rdkafka_fetcher.c" />
    <ClCompile Include="D:\TestRepo\librdkafka-master\src\rdkafka_telemetry.c" />
    <ClCompile Include="D:\TestRepo\librdkafka-master\src\rdkafka_telemetry_decode.c" />
    <ClCompile Include="D:\TestRepo\librdkafka-master\src\rdkafka_telemetry_encode.c" />
    <ClCompile Include="D:\TestRepo\librdkafka-master\src\nanopb\pb_encode.c" />
    <ClCompile Include="D:\TestRepo\librdkafka-master\src\nanopb\pb_decode.c" />
    <ClCompile Include="D:\TestRepo\librdkafka-master\src\nanopb\pb_common.c" />
    <ClCompile Include="D:\TestRepo\librdkafka-master\src\opentelemetry\metrics.pb.c" />
    <ClCompile Include="D:\TestRepo\librdkafka-master\src\opentelemetry\common.pb.c" />
    <ClCompile Include="D:\TestRepo\librdkafka-master\src\opentelemetry\resource.pb.c" />
    <ClCompile Include="D:\TestRepo\librdkafka-master\src\rdlist.c" />
    <ClCompile Include="D:\TestRepo\librdkafka-master\src\rdlog.c" />
    <ClCompile Include="D:\TestRepo\librdkafka-master\src\rdmurmur2.c" />
    <ClCompile Include="D:\TestRepo\librdkafka-master\src\rdports.c" />
    <ClCompile Include="D:\TestRepo\librdkafka-master\src\rdrand.c" />
    <ClCompile Include="D:\TestRepo\librdkafka-master\src\rdregex.c" />
    <ClCompile Include="D:\TestRepo\librdkafka-master\src\rdstring.c" />
    <ClCompile Include="D:\TestRepo\librdkafka-master\src\rdunittest.c" />
    <ClCompile Include="D:\TestRepo\librdkafka-master\src\rdvarint.c" />
    <ClCompile Include="D:\TestRepo\librdkafka-master\src\rdmap.c" />
    <ClCompile Include="D:\TestRepo\librdkafka-master\src\snappy.c" />
    <ClCompile Include="D:\TestRepo\librdkafka-master\src\tinycthread.c" />
    <ClCompile Include="D:\TestRepo\librdkafka-master\src\tinycthread_extra.c" />
    <ClCompile Include="D:\TestRepo\librdkafka-master\src\rdxxhash.c" />
    <ClCompile Include="D:\TestRepo\librdkafka-master\src\cJSON.c" />
    <ClCompile Include="D:\TestRepo\librdkafka-master\src\rdkafka_ssl.c" />
    <ClCompile Include="D:\TestRepo\librdkafka-master\src\rdhdrhistogram.c" />
    <ClCompile Include="D:\TestRepo\librdkafka-master\src\rddl.c" />
    <ClCompile Include="D:\TestRepo\librdkafka-master\src\rdkafka_sasl_win32.c" />
    <ClCompile Include="D:\TestRepo\librdkafka-master\src\rdkafka_sasl_scram.c" />
    <ClCompile Include="D:\TestRepo\librdkafka-master\src\rdkafka_sasl_oauthbearer.c" />
    <ClCompile Include="D:\TestRepo\librdkafka-master\src\rdkafka_sasl_oauthbearer_oidc.c" />
    <ClCompile Include="D:\TestRepo\librdkafka-master\src\rdkafka_zstd.c" />
    <ClCompile Include="D:\TestRepo\librdkafka-master\src\lz4.c" />
    <ClCompile Include="D:\TestRepo\librdkafka-master\src\lz4frame.c" />
    <ClCompile Include="D:\TestRepo\librdkafka-master\src\lz4hc.c" />
    <ClCompile Include="D:\TestRepo\librdkafka-master\src\regexp.c" />
  </ItemGroup>
  <ItemGroup>
    <ProjectReference Include="D:\TestRepo\librdkafka-master\build\ZERO_CHECK.vcxproj">
      <Project>{DC4F9D03-F01D-3954-82A1-B007D154D755}</Project>
      <Name>ZERO_CHECK</Name>
      <ReferenceOutputAssembly>false</ReferenceOutputAssembly>
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </ProjectReference>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>